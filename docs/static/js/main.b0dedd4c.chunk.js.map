{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGif","category","a","url","fetch","answer","json","data","extractGif","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","categoria","setImages","useEffect","then","imgs","GifExpertApp","categorias","cat","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAU/C,OACE,sBAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFN,GAAa,SAAAO,GAAI,OAAKL,GAAL,mBAAqBK,OACtCJ,EAAc,KAId,SACE,uBAAOK,KAAK,OACVC,MAAQP,EACRQ,SAXc,SAAEL,GAAF,OAAWF,EAAcE,EAAEM,OAAOF,a,+BCL3CG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCF,EADlC,8DAECG,MAAMD,GAFP,cAEdE,EAFc,gBAGGA,EAAOC,OAHV,uBAGZC,EAHY,EAGZA,KACFC,EAAaD,EAAKE,KAAI,SAACC,GAAS,IAAD,EACnC,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QARlB,kBAYbK,GAZa,4CAAH,sDCCNO,EAAc,SAACL,GAE1B,OADAM,QAAQC,IAAIP,GAEV,sBAAKQ,UAAU,OAAf,UACE,qBAAKC,IAAKT,EAAIP,IAAKiB,IAAKV,EAAIE,QAC5B,kCAAKF,EAAIE,MAAT,WCHOS,EAAU,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EAEZjC,mBAAS,IAFG,mBAEjCwB,EAFiC,KAEzBU,EAFyB,KASxC,OANAC,qBAAU,WACRxB,EAAOsB,GACJG,MAAK,SAACC,GAAD,OAAWH,EAAUG,QAC5B,CAACJ,IAEJN,QAAQC,IAAIJ,GAEV,qCACA,mCAAOS,EAAP,OACA,qBAAKJ,UAAU,YAAf,SACGL,EAAOJ,KAAI,SAAEC,EAAKC,GAAP,OACV,cAAC,EAAD,eAEKD,GADCA,EAAIC,aCMHgB,EApBM,WAAM,MAGUtC,mBAAS,IAHnB,mBAGlBuC,EAHkB,KAGNxC,EAHM,KAKzB,OACE,qCACE,gDACA,uBACA,cAAC,EAAD,CAAaA,aAAeA,IACxBwC,EAAWnB,KAAI,SAACoB,EAAKlB,GAAN,OACb,cAAC,EAAD,CAEEW,UAAcO,GADNA,UCZtBC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b0dedd4c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategoria }) => {\r\n  \r\n  const [inputValue, setInputValue] = useState('') //Tiene que tener algo por el input\r\n  const changeEvent = ( e ) => ( setInputValue(e.target.value) );\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setCategoria(cats => [inputValue , ...cats]);\r\n    setInputValue('');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input type='text'\r\n        value={ inputValue }\r\n        onChange={ changeEvent }/> \r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategoria: PropTypes.func.isRequired\r\n}","\r\nexport const getGif = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=5&api_key=fU74YvePxjm0mhor0c4SELoOtawZ92Nw`;\r\n  const answer = await fetch(url);\r\n  const { data } = await answer.json();\r\n  const extractGif = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  }\r\n  )\r\n  return extractGif\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = (img) => {\r\n  console.log(img)\r\n  return (\r\n    <div className='card' >\r\n      <img src={img.url} alt={img.title} />\r\n      <p> {img.title} </p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getGif } from '../helpers/getGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n  \r\n  const [images, setImages] = useState([]);\r\n  useEffect(() => {\r\n    getGif(categoria)\r\n      .then((imgs) => (setImages(imgs)))\r\n  }, [categoria]);\r\n\r\n  console.log(images)\r\n  return (\r\n    <>\r\n    <h3> { categoria } </h3>\r\n    <div className=\"card-grid\"> \r\n      {images.map(( img, id ) => (\r\n        <GifGridItem \r\n        key={ img.id }\r\n        { ...img } />) \r\n      )}\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n//rafc\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  //const initial = [ 'One Punch', 'Cazador X', 'Dragon Ball' ]\r\n  const [categorias, setCategoria] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <h1> GifExpertApp </h1>\r\n      <hr />\r\n      <AddCategory setCategoria={ setCategoria }/>\r\n        { categorias.map((cat, id) => ( \r\n            <GifGrid \r\n              key = { cat }\r\n              categoria = { cat } />\r\n          )) \r\n        }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <>\n    <GifExpertApp />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}